language: bash
sudo: required
services:
  - docker
before_install:
  - uname -a
  - cat /etc/os-release
  - lsb_release -a
  - MOSQUITTO_VERSION=$(cat version.txt)
  - echo $MOSQUITTO_VERSION
  - export MOSQUITTO_VERSION=$MOSQUITTO_VERSION
  # Determine number of CPU cores available
  - nproc
  # Display default Docker version
  - docker --version
  - docker build --help
  # Switch to a Docker version that understand "docker build --volume" syntax for qemu to work!
  - sudo apt-get update
  - sudo apt-get install -y wget git
  - sudo apt-get remove docker-ce
  - echo "deb [arch=amd64 trusted=yes] http://ftp.unicamp.br/pub/linuxpatch/ubuntu/14_04/misc/docker-17.04.0-ce-amd64/ trusty main" | sudo tee /etc/apt/sources.list.d/docker-engine.list
  - cat /etc/apt/sources.list.d/docker-engine.list
  - ls -alFh /etc/apt/sources.list.d/
  - sudo apt-add-repository 'deb https://apt.dockerproject.org/repo ubuntu-xenial main'
  - ls -alFh /etc/apt/sources.list.d/ | grep docker
  - sudo apt-get update
  - sudo apt-get install -y docker-engine
  # Display current Docker version
  - docker --version
  - docker build --help
  # Use qemu to build arm32v7 for Raspberry Pi using Travis CI on x86_64 in the cloud!
  - docker run --rm --privileged multiarch/qemu-user-static:register
  - wget https://github.com/multiarch/qemu-user-static/releases/download/v2.9.1/qemu-arm-static.tar.gz -O /tmp/qemu-arm-static.tar.gz
  - tar zxvf /tmp/qemu-arm-static.tar.gz -C /tmp
  # Build ARM Docker image using the qemu volume to allow ARM to build on X86_64 for Raspberry Pi 3
  - docker build --volume type=bind,source=/tmp/qemu-arm-static,target=/usr/bin/qemu-arm-static --build-arg MOSQUITTO_VERSION=$MOSQUITTO_VERSION -t ernestgwilsonii/docker-raspberry-pi-mosquitto:$MOSQUITTO_VERSION -f Dockerfile.armhf .
install: true
before_script: true
script: docker images
after_script: true
deploy:
  provider: script
  script: bash docker_push.sh
  on:
    branch: master
